name: Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
    
    - name: Install dependencies
      run: |
        cd src/tests
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: playwright install --with-deps chromium
    
    - name: Start backend API
      run: |
        pip install -r src/backend/requirements.txt
        nohup uvicorn src.backend.api.main:app --host 0.0.0.0 --port 8000 > backend.log 2>&1 &
        echo $! > backend.pid
        sleep 5
    
    - name: Start frontend
      run: |
        pip install -r src/frontend/requirements.txt
        cd src/frontend
        nohup streamlit run app.py --server.port 8501 --server.headless true > ../../frontend.log 2>&1 &
        echo $! > ../../frontend.pid
        sleep 10
      env:
        API_BASE_URL: http://localhost:8000
    
    - name: Verify services are running
      run: |
        curl -f http://localhost:8000/health || (echo "Backend health check failed" && cat backend.log && exit 1)
        curl -f http://localhost:8501 || (echo "Frontend health check failed" && cat frontend.log && exit 1)
        echo "Both services are running"
    
    - name: Run tests
      run: |
        cd src/tests
        pytest -v
    
    - name: Print logs on failure
      if: failure()
      run: |
        echo "=== Backend logs ==="
        cat backend.log || echo "No backend log"
        echo "=== Frontend logs ==="
        cat frontend.log || echo "No frontend log"
    
    - name: Cleanup
      if: always()
      run: |
        if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
        if [ -f frontend.pid ]; then kill $(cat frontend.pid) || true; fi
